import express from 'express';
import path from 'path';

export function getStaticPath(relPath: string) {
  return path.join(__dirname, 'static', relPath);
}

export function getRootUrl(publicUrl: string) {
  // To enable deploying static exports running from inside a nested path,
  // publicUrl can be set to `./`.
  // (See https://github.com/react-cosmos/react-cosmos/issues/777)
  // But publicUrl is used in for some paths which must begin with `/`:
  // - As publicPath in webpack-dev-middleware
  // - As the Express path for serving static assets
  // These are server-side modules (running in dev server mode) that only
  // respond to incoming paths which begin with the root URL we specify.
  return publicUrl === './' ? '/' : publicUrl;
}

export function serveStaticDir(
  app: express.Application,
  staticPath: string,
  publicUrl: string
) {
  const relStaticPath = path.relative(process.cwd(), staticPath);
  console.log(`[Cosmos] Serving static files from ${relStaticPath}`);

  app.use(
    getRootUrl(publicUrl),
    express.static(staticPath, {
      // Ensure loader index (generated by html-webpack-plugin) loads instead
      // of the index.html from staticPath
      index: false
    })
  );
}
